# docker-compose.yml
version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: customer-traffic-backend
    depends_on:
      - kafka
    ports:
      - "5000:5000"
    environment:
      PORT: 5000
      KAFKA_CLIENT_ID: customer-traffic-consumer
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: store-customer-traffic
      KAFKA_GROUP_ID: customer-traffic-group
      CORS_ORIGIN: http://localhost:3000

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    container_name: customer-traffic-frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
      NEXT_PUBLIC_SOCKET_URL: http://localhost:5000

  mock-producer:
    build:
      context: .
      dockerfile: tools/Dockerfile.mockproducer
    container_name: mock-producer
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: store-customer-traffic
